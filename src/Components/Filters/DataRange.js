import React,{Component} from 'react'import DayPicker, { DateUtils } from 'react-day-picker';import {dataRange} from "../../AC";import {connect} from 'react-redux'import {ChangeWordsLanguage} from '../ChangeWordsLanguage'import 'react-day-picker/lib/style.css';import './DataRangeStyle.css'import PropTypes from 'prop-types'class DataRange extends Component {    static contextTypes ={      choiceLanguage:PropTypes.string    }    constructor(props) {        super(props);        this.handleDayClick = this.handleDayClick.bind(this);        this.handleResetClick = this.handleResetClick.bind(this);    }    handleDayClick(day) {        const{dtRange,dataRange} = this.props;        dataRange(DateUtils.addDayToRange(day, dtRange))    }    handleResetClick() {        const{dataRange} = this.props;        dataRange({dtRange:{from:null,to:null}})    }    render() {        const { from, to } = this.props.dtRange;        const modifiers = { start: from, end: to };        return (            <div className="RangeExample">                <p>                    {!from && !to && ChangeWordsLanguage('please_select_the_first_day',this.context.choiceLanguage)}                    {from && !to && ChangeWordsLanguage('please_select_the_last_day',this.context.choiceLanguage)}                    {from && to &&                    `${ChangeWordsLanguage('selected_from',this.context.choiceLanguage)} ${from.toLocaleDateString()}                     ${ChangeWordsLanguage('to',this.context.choiceLanguage)} ${to.toLocaleDateString()}`}{' '}                    {from &&                    to && (                        <button className="link" onClick={this.handleResetClick}>                          {ChangeWordsLanguage('reset',this.context.choiceLanguage)}                        </button>                    )}                </p>                <DayPicker                    className="Selectable"                    selectedDays={[from, { from, to }]}                    modifiers={modifiers}                    onDayClick={this.handleDayClick}                />            </div>        );    }}export default connect(state =>({dtRange:state.filters.dataRange}),{dataRange},null,{pure:false})(DataRange)